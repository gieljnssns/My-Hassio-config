substitutions:
  devicename: smappee_fluvius
  platform: ESP8266
  board: nodemcuv2
  upper_devicename: Smappee fluvius
  ssid: !secret ssid-waskot

packages:
  wifi: !include common/wifi-waskot.yaml
  device_base: !include common/device_base.yaml

logger:
  baud_rate: 0

uart:
  - id: ubus
    tx_pin: GPIO1
    rx_pin: GPIO3
    baud_rate: 9600
    stop_bits: 1

modbus:
  id: mbus
  uart_id: ubus
    
sensor:
  - platform: pzemac
    address: 1
    modbus_id: mbus
    current:
      name: "L1 stroom"
      id: currentL1
    voltage:
      name: "L1 spanning"
      id: voltageL1
    energy:
      name: "L1 verbruik"
      id: energyL1
    power:
      name: "Huidig verbruik L1"
      id: powerL1
    frequency:
      name: "L1 frequentie"
    power_factor:
      name: "L1 cos phi"
    update_interval: 2s
  - platform: pzemac
    address: 2
    current:
      name: "L2 stroom"
      id: currentL2
    voltage:
      name: "L2 spanning"
      id: voltageL2
    energy:
      name: "L2 verbruik"
      id: energyL2
    power:
      name: "Huidig verbruik L2"
      id: powerL2
    frequency:
      name: "L2 frequentie"
    power_factor:
      name: "L2 cos phi"
    update_interval: 2s
  - platform: pzemac
    modbus_id: mbus
    address: 3
    current:
      name: "L3 stroom"
      id: currentL3
    voltage:
      name: "L3 spanning"
      id: voltageL3
    energy:
      name: "L3 verbruik"
      id: energyL3
    power:
      name: "Huidig verbruik L3"
      id: powerL3
    frequency:
      name: "L3 frequentie"
    power_factor:
      name: "L3 cos phi"
    update_interval: 2s
  
  ###  Template sensors  ###
  - platform: template
    name: "Huidig verbruik"
    unit_of_measurement: W
    icon: mdi:flash-outline
    id: power
    update_interval: 2s
    lambda: |-
      return (id(powerL1).state + id(powerL2).state + id(powerL3).state);
  - platform: template
    name: "Schijnbaar vermogen"
    unit_of_measurement: VA
    icon: mdi:flash-outline
    id: reactive_power
    update_interval: 5s
    lambda: |-
      return (id(reactive_power_L1).state + id(reactive_power_L2).state + id(reactive_power_L3).state );
  - platform: template
    name: "Schijnbaar vermogen L1"
    id: reactive_power_L1
    update_interval: 5s
    internal: true
    lambda: |-
      return (id(currentL1).state * id(voltageL1).state);
  - platform: template
    name: "Schijnbaar vermogen L2"
    id: reactive_power_L2
    update_interval: 5s
    internal: true
    lambda: |-
      return (id(currentL2).state * id(voltageL2).state);
  - platform: template
    name: "Schijnbaar vermogen L3"
    id: reactive_power_L3
    update_interval: 5s
    internal: true
    lambda: |-
      return (id(currentL3).state * id(voltageL3).state);
  
  ###  Daily energy  ###
  - platform: total_daily_energy
    name: "Dagelijks verbruik"
    power_id: power 
    filters:
        # Multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh
    icon: mdi:counter
    accuracy_decimals: 3
