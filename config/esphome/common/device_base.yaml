esphome:
  name: ${devicename}
  platform: ${platform}
  board: ${board}

captive_portal:

# Enable logging
logger:
  baud_rate: 0

api:
  password: !secret password

ota:
  password: !secret password

time:
  - platform: homeassistant
    id: homeassistant_time

sensor:
  - platform: wifi_signal
    name: "WiFi ${upper_devicename}"
    update_interval: 300s
  - platform: uptime
    id: up
    internal: true
    update_interval: 300s
    # on_value:
    #     then:
    #       - if:
    #           condition:
    #             lambda: |-
    #               (id(ssid).state) != "${ssid}";
    #           then:
    #             - homeassistant.service:
    #                 service: notify.persistent_notification
    #                 data:
    #                   title: EspHome ${upper_devicename} Wifi
    #                   message: "Verkeerd wifi netwerk - herstart binnen 5min"
    #             - delay: 300s
    #             - switch.turn_on: restart_device

binary_sensor:
  - platform: status
    name: "${upper_devicename} Status"

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${upper_devicename} IP
    ssid:
      name: ${upper_devicename} SSID
      id: ssid
      # on_value:
      #   then:
      #     - if:
      #         condition:
      #           lambda: |-
      #             (id(ssid).state) != "${ssid}";
      #         then:
      #           - homeassistant.service:
      #               service: notify.persistent_notification
      #               data:
      #                 title: EspHome ${upper_devicename} Wifi
      #                 message: "Verkeerd wifi netwerk - herstart binnen 5min"
      #           - delay: 300s
      #           - switch.turn_on: restart_device
    bssid:
      name: ${upper_devicename} BSSID
  - platform: template
    name: "Template Text Sensor"
    lambda: |-
      return {"${ssid}"};
    id: ssid_must
    internal: true
  - platform: template
    name: "Template Text Sensor2"
    lambda: |-
      return {id(ssid).state};
    id: ssid_present
    update_interval: 60s
    internal: true
  - platform: template
    name: ${upper_devicename} uptime
    id: uptime_human
    icon: mdi:clock-start
    lambda: |-
      uint32_t dur = id(up).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    update_interval: 300s
    on_value:
        then:
          - if:
              condition:
                lambda: |-
                  return (id(ssid_present).state) != (id(ssid_must).state);
              then:
                - logger.log: WiFi is verkeerd!
                - if:
                    condition:
                      - switch.is_on: restart_actief
                    then:
                      - homeassistant.service:
                          service: persistent_notification.create
                          data:
                            title: EspHome ${upper_devicename} Wifi
                            message: "Verkeerd wifi netwerk - herstart binnen 5min"
                      - delay: 300s
                      - switch.turn_on: restart_device
        # then:
        #   - if:
        #       condition:
        #         lambda: |-
        #           (id(ssid_present).state) != (id(ssid_must).state);
        #       then:
        #         - logger.log: WiFi is verkeerd!
        #         - homeassistant.service:
        #             service: persistent_notification.create
        #             data:
        #               title: EspHome ${upper_devicename} Wifi
        #               message: "Verkeerd wifi netwerk - herstart binnen 5min"
        #         - delay: 300s
        #         - switch.turn_on: restart_device

switch:
  - platform: restart
    name: ${upper_devicename} herstarten 
    id: restart_device
  
  - platform: template
    optimistic: true
    restore_state: false
    name: ${upper_devicename} verkeerde wifi
    id: restart_actief
    icon: mdi:restart-off
    # turn_on_action:
    #   - globals.set:
    #       id: chime
    #       value: 'true'
    # turn_off_action:
    #   - globals.set:
    #       id: chime
    #       value: 'false'
    # lambda: |-
    #   return id(chime);

# script:
#   - id: restart_script
#     then:
#       - logger.log: WiFi is verkeerd!
#       - homeassistant.service:
#           service: persistent_notification.create
#           data:
#             title: EspHome ${upper_devicename} Wifi
#             message: "Verkeerd wifi netwerk - herstart binnen 5min"
#       - delay: 300s
#       - switch.turn_on: restart_device
