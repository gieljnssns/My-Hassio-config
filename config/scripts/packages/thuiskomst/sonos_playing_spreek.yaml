sonos_playing_spreek:
  sequence:
    - action: mass.queue_command
      data:
        command: snapshot_create
      target:
        entity_id: "{{ sonos_entity }}"
    - delay: "00:00:03"
    - action: mass.queue_command
      data:
        command: pause
      target:
        entity_id: "{{ sonos_entity }}"
    - delay: "00:00:03"
    - action: media_player.volume_set
      data_template:
        entity_id: "{{ sonos_entity }}"
        volume_level: "{{ volume }}"
    - delay: "00:00:01"
    - action: >
        {% if is_state('input_select.tts', 'VoiceRSS') %}
          tts.voicerss_say
        {% elif is_state('input_select.tts', 'Google') %}
          tts.google_translate_say
        {% else %}
            False
        {% endif %}
      data_template:
        entity_id: "{{ tts_entity }}"
        message: "{{ speech_message }}"
        language: >
          {% if is_state('input_select.tts', 'VoiceRSS') %}
            nl-be
          {% elif is_state('input_select.tts', 'Google') %}
            nl
          {% else %}
            False
          {% endif %}
    - delay: "00:00:03"
    - wait_template: "{{ states('binary_sensor.keuken_not_playing') == 'on' }}"
    - delay: "00:00:01"
    - action: mass.queue_command
      data:
        command: snapshot_restore
      target:
        entity_id: "{{ sonos_entity }}"
