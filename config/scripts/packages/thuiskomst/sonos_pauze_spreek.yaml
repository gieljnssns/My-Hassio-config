  sonos_pauze_spreek:
    sequence:
      - service: sonos.snapshot
        data_template:
          entity_id: "{{ sonos_entity }}"
      - delay: '00:00:03'
      - service: media_player.volume_set
        data_template:
          entity_id: "{{ sonos_entity }}"
          volume_level: "{{ volume }}"
      - delay: '00:00:01'
      - service: >
          {% if is_state('input_select.tts', 'VoiceRSS') %}
            tts.voicerss_say
          {% elif is_state('input_select.tts', 'Google') %}
            tts.google_translate_say
          {% else %}
            False
          {% endif %}
        data_template:
          entity_id: "{{ sonos_entity }}"
          message: "{{ speech_message }}"
          language: >
            {% if is_state('input_select.tts', 'VoiceRSS') %}
              nl-be
            {% elif is_state('input_select.tts', 'Google') %}
              nl
            {% else %}
              False
            {% endif %}
      - delay: '00:00:03'
      - wait_template: "{{ states('binary_sensor.keuken_not_playing') == 'on' }}"
      - delay: '00:00:01'
      - service: sonos.restore
        data_template:
          with_group: false
          entity_id: "{{ sonos_entity }}"
      - delay: '00:00:03'
      # - service: >
      #     {% if state_attr('media_player.keuken', 'media_artist') == 'nl-nl' or state_attr('media_player.keuken', 'media_artist') == 'nl' or state_attr('media_player.keuken', 'media_artist') == 'nl-be' %}
      #       script.sonos_pauze_spreek_nl
      #     {% else %}
      #       script.sonos_pauze_spreek_non_nl
      #     {% endif %}
      - service: >
          {% if 'nl-nl' in state_attr("media_player.keuken", "media_title") or 'nl' in state_attr("media_player.keuken", "media_title") or 'nl-be' in state_attr("media_player.keuken", "media_title") %}
            script.sonos_pauze_spreek_nl
          {% else %}
            script.sonos_pauze_spreek_non_nl
          {% endif %}
        data_template:
          entity_id: "{{ sonos_entity }}"
