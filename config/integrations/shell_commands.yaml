mount_nas: sudo mount 192.168.79.30:/volume1/video /usr/share/hassio/share/nasvideo
publish_data: "curl -i -H 'Content-Type:application/json' -X POST -d '{}' http://localhost:5001/action/publish-data"
# post_mpc_optim: >-
#   curl -i -H 'Content-Type: application/json' -X POST -d '{
#     "def_total_hours":[
#       {{  states('sensor.wasmachien_uren')  }},
#       {{  states('sensor.droogkast_uren')  }},
#       {{  states('sensor.afwasmachien_uren')  }},
#       {{  states('sensor.warmtepompboiler_uren')  }},
#       {{  states('sensor.warmtepomp_uren')}}],
#     "set_def_constant":[true, true, true, true, true],
#     "pv_power_forecast": {{
#         [states('sensor.huidige_opbrengst')|int(0)] +
#         state_attr('sensor.pv_power_forecast_list', 'list')[:states('sensor.prediction_horizon') | int(0) - 1]}},
#     "prod_price_forecast": {{
#         [state_attr('sensor.prod_price_forecast_list', 'extra') | float] +
#         state_attr('sensor.prod_price_forecast_list', 'list')[:states('sensor.prediction_horizon') | int(0) - 1]}},
#     "load_cost_forecast": {{
#         [states('sensor.nordpool_kwh_be_eur') | float] +
#         state_attr('sensor.real_cost_forecast_list', 'list')[:states('sensor.prediction_horizon') | int(0) - 1]}},
#     "prediction_horizon": {{ states('sensor.prediction_horizon') | int(0) }},
#     "alpha": 1,
#     "beta": 0
#     }' http://localhost:5001/action/naive-mpc-optim

# # 1
# # 1 x per dag?
# forecast_model_fit_load_zonder_wp: >-
#   curl -i -H 'Content-Type: application/json' -X POST -d '{
#     "days_to_retrieve": 45,
#     "model_type": "load_forecast",
#     "var_model": "sensor.huidig_verbruik_zonder_wp",
#     "sklearn_model": "KNeighborsRegressor",
#     "num_lags": 48,
#     "split_date_delta": "48h",
#     "perform_backtest": "True"
#     }' http://localhost:5001/action/forecast-model-fit

# # 2
# forecast_model_tune_load_zonder_wp: >-
#   curl -i -H 'Content-Type: application/json' -X POST -d '{
#     "model_type": "load_forecast",
#     "var_model": "sensor.huidig_verbruik_zonder_wp",
#     "days_to_retrieve": 100
#     }' http://localhost:5001/action/forecast-model-tune

# # 3
# forecast_model_predict_load_zonder_wp: >-
#   curl -i -H 'Content-Type: application/json' -X POST -d '{
#     "model_type": "load_forecast",
#     "var_model": "sensor.huidig_verbruik_zonder_wp",
#     "model_predict_publish": "True",
#     "model_predict_entity_id": "sensor.emhass_load_zonder_wp_custom_model",
#     "model_predict_unit_of_measurement": "W",
#     "model_predict_friendly_name": "Load custom model"
#     }' http://localhost:5001/action/forecast-model-predict
