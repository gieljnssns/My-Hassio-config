home:
  name: "Nummer 79"
  solar_power: sensor.emhass_huidige_opbrengst
  solar_energy: sensor.opbrengst_kwh
  # grid_supply_power: sensor.huidig_fluvius_omgekeerd
  grid_supply_power: sensor.huidig_fluvius
  grid_inverted: True
  imported_energy: sensor.grid_consumption_kwh
  exported_energy: sensor.grid_production_kwh
  devices:
    - name: Wasmachien
      id: dff35eb8-ff9f-4009-b217-f416ffd1e73c
      type: homeassistant
      power: sensor.wasmachien_vermogen
      energy: sensor.wasmachien_kwh
      store_sessions: true
      # manufacturer: Miele
      # model: Adora TS WP
    - name: Droogkast
      id: 75203c88-216f-4712-8a94-80513793f7e1
      type: homeassistant
      power: sensor.droogkast_vermogen
      energy: sensor.droogkast_kwh
      store_sessions: true
      # manufacturer: Miele
      # model: Adora TS WP
    - name: Afwasmachien
      id: 3abcf4d9-5434-4675-bb84-eb7f3afc252d
      type: homeassistant
      power: sensor.afwasmachien_vermogen
      energy: sensor.afwasmachien_kwh
      store_sessions: true
      # manufacturer: Miele
      # model: Adora TS WP
    - name: Warmtepompboiler
      id: 19442b42-7c3c-4692-ace6-61384d62fb70
      type: homeassistant
      power: sensor.warmtepompboiler_huidig_verbruik
      energy: sensor.warmtepompboiler_kwh
      store_sessions: true
      # manufacturer: Masser
      # model: M1
    - name: Warmtepomp
      id: cccdd0c5-b07e-468a-ad4e-6d0c8baf2956
      type: homeassistant
      power: sensor.warmtepomp_huidig_verbruik
      energy: sensor.warmtepomp_kwh
      store_sessions: true
      # manufacturer: Masser
      # model: M2

emhass:
  retrieve_hass_conf:
    - freq: 30 # The time step to resample retrieved data from hass in minutes
    - days_to_retrieve: 45 # We will retrieve data from now and up to days_to_retrieve days
    - load_negative: False # Set to True if the retrived load variable is negative by convention
    - set_zero_min: True # A special treatment for a minimum value saturation to zero. Values below zero are replaced by nans
    - method_ts_round: "first" # Set the method for timestamp rounding, options are: first, last and nearest

  optim_conf:
    - set_use_battery: False # consider a battery storage
    - delta_forecast: 1 # days
    - weather_forecast_method: "scrapper" # options are 'scrapper' and 'csv'
    - load_forecast_method: "mlforecaster" # options are 'csv' to load a custom load forecast from a CSV file or 'naive' for a persistance model
    - load_cost_forecast_method: "hp_hc_periods" # options are 'hp_hc_periods' for peak and non-peak hours contracts and 'csv' to load custom cost from CSV file
    - list_hp_periods: # list of different tariff periods (only needed if load_cost_forecast_method='hp_hc_periods')
        - period_hp_1:
            - start: "02:54"
            - end: "15:24"
        - period_hp_2:
            - start: "17:24"
            - end: "20:24"
    - load_cost_hp: 0.1907 # peak hours load cost in €/kWh (only needed if load_cost_forecast_method='hp_hc_periods')
    - load_cost_hc: 0.1419 # non-peak hours load cost in €/kWh (only needed if load_cost_forecast_method='hp_hc_periods')
    - prod_price_forecast_method: "constant" # options are 'constant' for constant fixed value or 'csv' to load custom price forecast from a CSV file
    - prod_sell_price: 0.065 # power production selling price in €/kWh (only needed if prod_price_forecast_method='constant')
    - set_total_pv_sell: False # consider that all PV power is injected to the grid (self-consumption with total sell)
    - lp_solver: "PULP_CBC_CMD" # set the name of the linear programming solver that will be used
    - lp_solver_path: "empty" # set the path to the LP solver
    - set_nocharge_from_grid: False # avoid battery charging from the grid
    - set_nodischarge_to_grid: True # avoid battery discharging to the grid
    - set_battery_dynamic: False # add a constraint to limit the dynamic of the battery power in power per time unit
    - battery_dynamic_max: 0.9 # maximum dynamic positive power variation in percentage of battery maximum power
    - battery_dynamic_min: -0.9 # minimum dynamic negative power variation in percentage of battery maximum power

  plant_conf:
    - P_grid_max: 9000 # The maximum power that can be supplied by the utility grid in Watts
    - module_model: # The PV module model
        - "CSUN_Eurasia_Energy_Systems_Industry_and_Trade_CSUN295_60M"
    - inverter_model: # The PV inverter model
        - "Fronius_International_GmbH__Fronius_Primo_5_0_1_208_240__240V_"
    - surface_tilt: # The tilt angle of your solar panels
        - 30
    - surface_azimuth: # The azimuth angle of your PV installation
        - 205
    - modules_per_string: # The number of modules per string
        - 16
    - strings_per_inverter: # The number of used strings per inverter
        - 1
    - Pd_max: 1000 # If your system has a battery (set_use_battery=True), the maximum discharge power in Watts
    - Pc_max: 1000 # If your system has a battery (set_use_battery=True), the maximum charge power in Watts
    - eta_disch: 0.95 # If your system has a battery (set_use_battery=True), the discharge efficiency
    - eta_ch: 0.95 # If your system has a battery (set_use_battery=True), the charge efficiency
    - Enom: 5000 # If your system has a battery (set_use_battery=True), the total capacity of the battery stack in Wh
    - SOCmin: 0.3 # If your system has a battery (set_use_battery=True), the minimun allowable battery state of charge
    - SOCmax: 0.9 # If your system has a battery (set_use_battery=True), the minimun allowable battery state of charge
    - SOCtarget: 0.6 # If your system has a battery (set_use_battery=True), the desired battery state of charge at the end of each optimization cycle

